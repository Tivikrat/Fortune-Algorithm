Використовуючи main.cpp файл, вкладений у цю папку, що постійно запускає алгоритм на 64000 точках та вимірює час виконання і споживання пам'яті алгоритму. Засоби профілювання Visual Studio 2019 втеч пам'яті не виявили; із запущеного досліду видно, що споживання пам'яті лише коливається (фрагментація/дефрагментація пам'яті, інші набори тестових даних) і немає чіткої тенденції зростання споживання.

64000 points for 6754 ms using 44515328 bytes
64000 points for 5804 ms using 44654592 bytes
64000 points for 5850 ms using 44908544 bytes
64000 points for 5657 ms using 44933120 bytes
64000 points for 5689 ms using 44728320 bytes
64000 points for 5865 ms using 44613632 bytes
64000 points for 5916 ms using 44777472 bytes
64000 points for 5887 ms using 44769280 bytes
64000 points for 5756 ms using 44810240 bytes
64000 points for 5693 ms using 44912640 bytes
64000 points for 6089 ms using 44744704 bytes
64000 points for 5739 ms using 44859392 bytes
64000 points for 5691 ms using 44867584 bytes
64000 points for 5833 ms using 44871680 bytes
64000 points for 6680 ms using 44802048 bytes
64000 points for 7010 ms using 44847104 bytes
64000 points for 6217 ms using 44847104 bytes
64000 points for 5466 ms using 44875776 bytes
64000 points for 5924 ms using 44789760 bytes
64000 points for 5944 ms using 44781568 bytes
64000 points for 5207 ms using 44785664 bytes
64000 points for 5160 ms using 44810240 bytes
64000 points for 5188 ms using 44875776 bytes
64000 points for 5555 ms using 44867584 bytes
64000 points for 6124 ms using 44871680 bytes
64000 points for 6599 ms using 44855296 bytes
64000 points for 5560 ms using 44953600 bytes
64000 points for 5087 ms using 44974080 bytes
64000 points for 6009 ms using 44957696 bytes
64000 points for 5914 ms using 44949504 bytes
64000 points for 5586 ms using 44982272 bytes
64000 points for 5207 ms using 44896256 bytes
64000 points for 5168 ms using 45056000 bytes
64000 points for 5619 ms using 44916736 bytes
64000 points for 5546 ms using 45076480 bytes
64000 points for 5645 ms using 45023232 bytes
64000 points for 5217 ms using 45035520 bytes
64000 points for 5412 ms using 44896256 bytes
64000 points for 5160 ms using 45010944 bytes
64000 points for 5075 ms using 45137920 bytes
64000 points for 5403 ms using 44920832 bytes
64000 points for 5324 ms using 44965888 bytes
64000 points for 5224 ms using 44892160 bytes
64000 points for 5918 ms using 44904448 bytes
64000 points for 5971 ms using 45006848 bytes
64000 points for 5823 ms using 44953600 bytes
64000 points for 5916 ms using 44949504 bytes
64000 points for 6134 ms using 44892160 bytes
64000 points for 5470 ms using 44933120 bytes
64000 points for 5902 ms using 44953600 bytes
64000 points for 5736 ms using 45117440 bytes
64000 points for 5808 ms using 45010944 bytes
64000 points for 5731 ms using 45019136 bytes
64000 points for 5358 ms using 45010944 bytes
64000 points for 5537 ms using 45031424 bytes
64000 points for 5231 ms using 45256704 bytes
64000 points for 5216 ms using 45010944 bytes
64000 points for 5497 ms using 45006848 bytes
64000 points for 5142 ms using 44941312 bytes
64000 points for 5149 ms using 45068288 bytes
64000 points for 5611 ms using 44969984 bytes
64000 points for 5574 ms using 44965888 bytes
64000 points for 5224 ms using 44916736 bytes
64000 points for 5297 ms using 45019136 bytes
64000 points for 5248 ms using 44945408 bytes
64000 points for 5281 ms using 45060096 bytes
64000 points for 5216 ms using 45015040 bytes
64000 points for 5273 ms using 45068288 bytes
64000 points for 5404 ms using 45051904 bytes
64000 points for 5212 ms using 44965888 bytes
64000 points for 5473 ms using 45010944 bytes
64000 points for 5515 ms using 44945408 bytes
64000 points for 5237 ms using 44933120 bytes
64000 points for 5270 ms using 44990464 bytes
64000 points for 5420 ms using 44961792 bytes
64000 points for 5223 ms using 45010944 bytes

and so on...